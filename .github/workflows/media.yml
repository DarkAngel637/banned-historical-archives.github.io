name: media
on:
  issues:
    types: [opened]

jobs:
  media:
    name: media
    if: ${{ startsWith(github.event.issue.title, '[自动化多媒体录入]') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read # <--- allows to read repo
    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1
        with:
          name: media${{ env.GITHUB_ACTION }}${{ env.GITHUB_RUN_NUMBER }}${{ github.sha }}${{ steps.time.outputs.time }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          token: ${{ secrets.GH_PAT }}
      - uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
      - run: npm i
      - id: get_archive_id
        run: echo "archive_id=$(npx ts-node --project ./tsconfig.build.json backend/media-gitworkflow-get-archive-id.ts)" >> $GITHUB_ENV
        env:
          BODY: ${{ github.event.issue.body }}
          TITLE: ${{ github.event.issue.title }}
      - id: action_with_json_output
        run: echo "data=$(npx ts-node --project ./tsconfig.build.json backend/media-gitworkflow.ts)" >> $GITHUB_ENV
        env:
          BODY: ${{ github.event.issue.body }}
          TITLE: ${{ github.event.issue.title }}
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          BODY: ${{ github.event.issue.body }}
          TITLE: ${{ github.event.issue.title }}
        run: |
          cd public/archives${{ env.archive_id }}
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git checkout -b feat-${{ steps.generate-uuid.outputs.uuid }}
          git add .
          git commit -m 'feat: $TITLE'
          git push origin feat-${{ steps.generate-uuid.outputs.uuid }}
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          https://api.github.com/repos/banned-historical-archives/banned-historical-archives${{ env.archive_id }}/pulls \
          -d '{"title":"$TITLE","body":"https://github.com/banned-historical-archives/banned-historical-archives.github.io/issues/${{github.event.issue.number}}","head":"feat-${{ steps.generate-uuid.outputs.uuid }}","base":"main"}'
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          BODY: ${{ github.event.issue.body }}
          TITLE: ${{ github.event.issue.title }}
        run: |
          git add .
          git commit -m 'feat: $TITLE'
          git push origin HEAD:feat-${{ steps.generate-uuid.outputs.uuid }}
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          https://api.github.com/repos/banned-historical-archives/banned-historical-archives.github.io/pulls \
          -d '{"title":"$TITLE","body":"https://github.com/banned-historical-archives/banned-historical-archives.github.io/issues/${{github.event.issue.number}}","head":"feat-${{ steps.generate-uuid.outputs.uuid }}","base":"master"}'
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{secrets.GH_PAT}}
          body: ${{ env.data }}
