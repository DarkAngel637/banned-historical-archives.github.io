name: build
on:
  push:
    branches: ['master']

jobs:
  container-job:
    runs-on: ubuntu-latest

    # runs all of the steps inside the specified container rather than on the VM host.
    # Because of this the network configuration changes from host based network to a container network.
    container:
      image: node:10.16-jessie
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root_password
        ports:
          - 3306:3306
        # needed because the mysql container does not provide a healthcheck
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
      - uses: actions/checkout@v2
      - run: cd public && rm -rf archives9 && git clone --depth=1 https://github.com/banned-historical-archives/banned-historical-archives9.git archives9 && rm -rf archives10 && git clone --depth=1 https://github.com/banned-historical-archives/banned-historical-archives10.git archives10
      - run: ls public
      - run: ls public/archives10
      - name: Set up MySQL
        env:
          # use mysql for the host here because we have specified a container for the job.
          # If we were running the job on the VM this would be localhost
          MYSQL_HOST: mysql
          MYSQL_PORT: 3306
        run: |
          apt-get update
          apt-get install -y --force-yes mysql-client
          mysql --host mysql -e 'CREATE DATABASE banned_history CHARACTER SET utf8 COLLATE utf8_general_ci;' -uroot -proot_password
          apt-get install -y --force-yes p7zip-full
          LC_ALL=C 7z x public/archives10/7z/1976年12月.7z -y
          ls public/archives10/7z/1976年12月
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17.9
      - run: npm install
      - run: cp -r ./node_modules/pdfjs-dist ./public/
      - run: NODE_OPTIONS="--max-old-space-size=8192" CI=true npm run init-db
      - run: SITE_URL='https://banned-historical-archives.github.io' CI=true COMMIT_HASH="${{ github.sha }}" npm run build
      - run: touch out/.nojekyll
      - run: git config --global http.postBuffer 2097152000
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: out
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
